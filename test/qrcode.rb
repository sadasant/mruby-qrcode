# QR Test

if Object.const_defined?(:QR)
  assert("QR") do
    QR.class == Module
  end

  assert('QR properties must be accesible') do
    msg = "Hi"
    qr  = QR.new(msg)
    assert_equal(msg, qr.msg)
  end

  assert('QR.generate') do
    msg = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua."
    qr  = QR.new(msg)
    result   = qr.generate()
    expected = "BM\006\002\000\000\000\000\000\000>\000\000\000(\000\000\0009\000\000\0009\000\000\000\001\000\001\000\000\000\000\000\310\001\000\000\304\016\000\000\304\016\000\000\002\000\000\000\002\000\000\000\377\377\377\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\017\354\000r\356\351\230\000\b\"cJD@\020\000\v\251S\271\211\317\270\000\v\244\201:\t\037\250\000\v\257k\377\273\217\230\000\b!\032b\333\270\220\000\017\340\314\253\b\212\270\000\000\t\222b\225X\310\000\016 4>\273\317\220\000\a\002\226w\213\212\000\000\004h6\327\215\206\370\000\006C\212b\001\000H\000\r\361\344e\372\240\020\000\n\312\374\312\275\313\230\000\005?\233\2173/\230\000\tD\304\001\273\270X\000\n=\354G\021\b\000\000\a\000~\2273/\210\000\001tj\177\201\037\370\000\001\236 \363@\210P\000\017!\270\232\373\357\030\000\006\321\274I\215\226\300\000\r\372\313\376\211\217\230\000\v\212\304c\f\030\310\000\f\256\333+\273\212\210\000\n\215\006c\331\250\220\000\000\373\017\277\210\237\270\000\nP\322\035\035@X\000\t5\334\036\371\364\310\000\006\e\207\r\334\265\200\000\017w\021\360\356\360H\000\a\227|\000D@8\000\f\266\240z\356\343\220\000\004\emXD\\\220\000\004w\241\365\031Y8\000\r\300QI\025\001\330\000\t\375\257\236\213\243\310\000\006E\032\017\331\215\230\000\003\251=\021\235\004\310\000\002[\224XA\b8\000\n\243\360?\277\350\220\000\000\002\260\243\237\340\000\000\017\352\252\252\252\253\370\000\b&#\243jb\b\000\v\254\233>\367\302\350\000\v\245\241,B\022\350\000\v\242\264\3125\032\350\000\b/\201\364\314\272\b\000\017\342\312tD\v\370\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000"
    assert_equal(expected, result)
  end
end
